From 3bceec6149394d461683c0be8eb271be982ce88b Mon Sep 17 00:00:00 2001
From: hopeless-ponderer <hopelessponderer1123@gmail.com>
Date: Sun, 30 May 2021 22:58:08 -0700
Subject: [PATCH] identified delphi bot as fork of petra bot; removed petra bot
 from development

fixed Athenian patron temples (accidentally set most to fertility temples)
---
 .../mods/public/simulation/ai/delphi/baseManager.js | 13 ++++++-------
 .../simulation/ai/delphi/queueplanBuilding.js       |  2 +-
 .../public/simulation/ai/delphi/startingStrategy.js |  2 +-
 .../structures/athen/temple_patron_sea.xml          |  2 +-
 .../structures/athen/temple_patron_trade.xml        |  2 +-
 5 files changed, 10 insertions(+), 11 deletions(-)

diff --git a/binaries/data/mods/public/simulation/ai/delphi/baseManager.js b/binaries/data/mods/public/simulation/ai/delphi/baseManager.js
index 24d8975896..cf467c6c66 100644
--- a/binaries/data/mods/public/simulation/ai/delphi/baseManager.js
+++ b/binaries/data/mods/public/simulation/ai/delphi/baseManager.js
@@ -274,7 +274,6 @@ DELPHI.BaseManager.prototype.findBestDropsiteLocation = function(gameState, reso
 	if (template.hasClasses(["CivCentre", "Dock"]))
 		return { "quality": 0, "pos": [0, 0] };
 
-	let template = gameState.getTemplate(gameState.applyCiv("structures/{civ}/storehouse"));
 	let halfSize = 0;
 	if (template.get("Footprint/Square"))
 		halfSize = Math.max(+template.get("Footprint/Square/@depth"), +template.get("Footprint/Square/@width")) / 2;
@@ -289,7 +288,7 @@ DELPHI.BaseManager.prototype.findBestDropsiteLocation = function(gameState, reso
 	let obstructions = DELPHI.createObstructionMap(gameState, this.accessIndex, template);
 
 	let ccEnts = gameState.getOwnStructures().filter(API3.Filters.byClass("CivCentre")).toEntityArray();
-	let dpEnts = gameState.getOwnStructures().filter(API3.Filters.byClassesOr(["Storehouse", "Dock"])).toEntityArray();
+	let dpEnts = gameState.getOwnStructures().filter(API3.Filters.byClasses(["Storehouse", "Dock"])).toEntityArray();
 
 	let bestIdx;
 	let bestVal = 0;
@@ -464,17 +463,17 @@ DELPHI.BaseManager.prototype.checkResourceLevels = function(gameState, queues)
 			let ratio = this.gatherers[type].lost / total;
 			if (ratio > 0.15)
 			{
-				let newDP = this.findBestDropsiteLocation(gameState, type);
-				if (newDP.quality > 50 && gameState.ai.HQ.canBuild(gameState, "structures/{civ}/storehouse"))
-					queues.dropsites.addPlan(new DELPHI.ConstructionPlan(gameState, "structures/{civ}/storehouse", { "base": this.ID, "type": type }, newDP.pos));
+				let newDP = this.findBestDropsiteAndLocation(gameState, type);
+				if (newDP.quality > 50 && gameState.ai.HQ.canBuild(gameState, newDP.templateName))
+					queues.dropsites.addPlan(new DELPHI.ConstructionPlan(gameState, newDP.templateName, { "base": this.ID, "type": type }, newDP.pos));
 				else if (!gameState.getOwnFoundations().filter(API3.Filters.byClass("CivCentre")).hasEntities() && !queues.civilCentre.hasQueuedUnits())
 				{
 					// No good dropsite, try to build a new base if no base already planned,
 					// and if not possible, be less strict on dropsite quality.
 					if ((!gameState.ai.HQ.canExpand || !gameState.ai.HQ.buildNewBase(gameState, queues, type)) &&
 					    newDP.quality > Math.min(25, 50*0.15/ratio) &&
-					    gameState.ai.HQ.canBuild(gameState, "structures/{civ}/storehouse"))
-						queues.dropsites.addPlan(new DELPHI.ConstructionPlan(gameState, "structures/{civ}/storehouse", { "base": this.ID, "type": type }, newDP.pos));
+					    gameState.ai.HQ.canBuild(gameState, newDP.templateName))
+						queues.dropsites.addPlan(new DELPHI.ConstructionPlan(gameState, newDP.templateName, { "base": this.ID, "type": type }, newDP.pos));
 				}
 			}
 			this.gatherers[type].nextCheck = gameState.ai.playedTurn + 20;
diff --git a/binaries/data/mods/public/simulation/ai/delphi/queueplanBuilding.js b/binaries/data/mods/public/simulation/ai/delphi/queueplanBuilding.js
index 0714c09ae6..63fdb304fd 100644
--- a/binaries/data/mods/public/simulation/ai/delphi/queueplanBuilding.js
+++ b/binaries/data/mods/public/simulation/ai/delphi/queueplanBuilding.js
@@ -119,7 +119,7 @@ DELPHI.ConstructionPlan.prototype.findGoodPosition = function(gameState)
 		// recompute the best dropsite location in case some conditions have changed
 		let base = HQ.getBaseByID(this.metadata.base);
 		let type = this.metadata && this.metadata.type ? this.metadata.type : "wood";
-		let newpos = base.findBestDropsiteLocation(gameState, type);
+		let newpos = base.findBestDropsiteLocation(gameState, type, template.templateName());
 		if (newpos && newpos.quality > 0)
 		{
 			let pos = newpos.pos;
diff --git a/binaries/data/mods/public/simulation/ai/delphi/startingStrategy.js b/binaries/data/mods/public/simulation/ai/delphi/startingStrategy.js
index 1ed3c003dd..247bc1774a 100644
--- a/binaries/data/mods/public/simulation/ai/delphi/startingStrategy.js
+++ b/binaries/data/mods/public/simulation/ai/delphi/startingStrategy.js
@@ -548,7 +548,7 @@ DELPHI.HQ.prototype.configFirstBase = function(gameState)
 	let template = gameState.applyCiv("structures/{civ}/storehouse");
 	if (!gameState.getOwnEntitiesByClass("Storehouse", true).hasEntities() && this.canBuild(gameState, template))
 	{
-		let newDP = this.baseManagers[1].findBestDropsiteLocation(gameState, "wood");
+		let newDP = this.baseManagers[1].findBestDropsiteAndLocation(gameState, "wood");
 		if (newDP.quality > 40)
 		{
 			// if we start with enough workers, put our available resources in this first dropsite
diff --git a/binaries/data/mods/public/simulation/templates/structures/athen/temple_patron_sea.xml b/binaries/data/mods/public/simulation/templates/structures/athen/temple_patron_sea.xml
index 01c3c066e2..b10e51d940 100644
--- a/binaries/data/mods/public/simulation/templates/structures/athen/temple_patron_sea.xml
+++ b/binaries/data/mods/public/simulation/templates/structures/athen/temple_patron_sea.xml
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
-<Entity parent="civ/athen/temple_patron|template_structure_civic_temple_patron_fertility">
+<Entity parent="civ/athen/temple_patron|template_structure_civic_temple_patron_sea">
   <Identity>
     <SpecificName>Naṓs Poseidonos</SpecificName>
   </Identity>
diff --git a/binaries/data/mods/public/simulation/templates/structures/athen/temple_patron_trade.xml b/binaries/data/mods/public/simulation/templates/structures/athen/temple_patron_trade.xml
index a8038e7880..d5329b7e1e 100644
--- a/binaries/data/mods/public/simulation/templates/structures/athen/temple_patron_trade.xml
+++ b/binaries/data/mods/public/simulation/templates/structures/athen/temple_patron_trade.xml
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
-<Entity parent="civ/athen/temple_patron|template_structure_civic_temple_patron_fertility">
+<Entity parent="civ/athen/temple_patron|template_structure_civic_temple_patron_trade">
   <Identity>
     <SpecificName>Naṓs Hermes</SpecificName>
   </Identity>
-- 
2.25.1

