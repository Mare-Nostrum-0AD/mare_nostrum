From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: hopeless-ponderer <hopelessponderer1123@gmail.com>
Date: Sun, 13 Jun 2021 18:02:00 -0700
Subject: [PATCH] continued documenting code in README.md, CONTRIBUTING.md,
 TODO.md

---
 binaries/data/mods/public/CONTRIBUTING.md     | 55 +++++++++++++++++++
 binaries/data/mods/public/README.md           |  1 +
 binaries/data/mods/public/TODO.md             | 39 ++-----------
 .../template_structure_civic_civil_centre.xml |  1 +
 4 files changed, 62 insertions(+), 34 deletions(-)
 create mode 100644 binaries/data/mods/public/CONTRIBUTING.md

diff --git a/binaries/data/mods/public/CONTRIBUTING.md b/binaries/data/mods/public/CONTRIBUTING.md
new file mode 100644
index 0000000000..2ef9522159
--- /dev/null
+++ b/binaries/data/mods/public/CONTRIBUTING.md
@@ -0,0 +1,55 @@
+# Contributing
+Mare Nostrum is a young project, and I would love for more people to help develop it. I'd especially love some artists to join the team, as I have limited graphic design skills and no idea how to use Blender.
+
+## Notice
+Mare Nostrum is free and open source software, made available under the GNU General Public License and the Creative Commons Attribution International Public License (see [LICENSE\_AND\_ATTRIBUTIONS](./LICENSE_AND_ATTRIBUTIONS.txt)).
+By committing your code or artwork to this repository, you agree to make it available free of charge both to the creators of Mare Nostrum and to the public at large, so long as they provide proper attribution and release any derivative works under the same or compatible licenses.
+
+## Implementing Features and Bugfixes
+A list of unresolved bugs and features requests can be found on the [issues page](./issues) or in [TODO.md](./TODO.md). If you are looking at a feature request in issues, please make sure it has been approved by the repo owner before working on it.
+
+When opening a pull request, please make sure the title refers to the relevant issue by number and includes a brief restatement of what if implements (i.e. "#42 Reduce killer bunny attack interval").
+
+If you would like to implement a new feature, or modify an existing one, please open a Feature Request in issues first so we can discuss whether or not it should be implemented.
+
+## Developer Tools
+I do most of the work on Mare Nostrum on a branch of the 0AD development repository, cloned from [https://github.com/0ad/0ad](https://github.com/0ad/0ad). This allows me to frequently rebase onto the development version of 0AD to nip compatibility issues in the bud, and also makes it easier to access existing game files. When I'm ready to commit changes, I use the shell utils in [dev/parent/utils.sh](./dev/parent/utils.sh) to copy the relevant files over to this repository and commit the same message simultaneously in both repositories. I also store a copy of every commit on the development repository in [dev/patch](./dev/patch) so it can be reconstructed easily by any other developer. I recommend other developers set up their workspace this way as well.
+
+To set up your workspace in this manner, run ./dev/setup-parent.sh \<YOUR 0AD REPOSITORY\>. If you haven't cloned the 0AD repo into \<YOUR 0AD REPOSITORY\> yet, the script will do it for you. The script will create a mare\_nostrum branch and apply the commits in dev/patch, starting from the commit stored in [dev/git\_base.txt](./dev/git_base.txt). It will then copy the script(s) stored in dev/parent to \<YOUR 0AD REPOSITORY\>/dev and append a few system-specific variables to dev/utils.sh. You can then add dev/ to your new branch and source dev/utils before you start developing.
+
+## Coding Conventions
+For the most part, obey the same coding conventions as Wildfire Games, outlined [here](https://trac.wildfiregames.com/wiki/Coding_Conventions). However, there are a few exceptions I'd like to follow, outlined below. Don't modify pre-existing 0AD code to fit these coding conventions, these only apply to new code.
+
+### JavaScript
+- Multi-line strings should be written as template literals, which are contained within back ticks (``). This allows you to interpolate values using curly braces (${}) This is particularly true for new component schemas in simulation/components/. See the example below.
+```javascript
+		Foobar.prototype.Schema = 
+		`<a:help>Sample component</a:help>
+		<element name="Cost" a:help="Sample element to show how to interpolate resources into a multi-line string">
+			${ Resources.BuildSchema("positiveInteger") }
+		</element>`;
+```
+- Document functions with at least one sentence explaining what it does, as well as a breakdown of each parameter and the return value(s). See the example below.
+```javascript
+		// Gets the square of the distance between two entities.
+		// @param entityA		Number					ID of the first entity
+		// @param entityB		Number					ID of the second entity
+		// @return				Number||undefined		The square of the distance between the two entities, or undefined if the position of one or both entities cannot be determined.
+		function getSquareVectorDistance(entityA, entityB)
+```
+
+### XML
+- Certain components allow you to create elements with any name (i.e. City/ValueModifiers). When creating a new arbitrary element, add at least one line of comments explaining what the element does.
+```xml
+		<ValueModifiers>
+			<PopulationDecay>
+				<!-- Increase the population decay rate per every 250 citizens, to make it increasingly more difficult to grow the population. -->
+				<Paths datatype="tokens">City/Population/Growth/DecayAmount</Paths>
+				<Add>2</Add>
+				<PerPop>250</PerPop>
+			</PopulationDecay>
+		</ValueModifiers>
+```
+
+### Other
+- Use Commonwealth (British) English spelling and vocabulary when naming templates, components, and classes. However, U.S. spelling and vocabulary should be used for variable names and documentation, except when referencing template, component, and class names.
diff --git a/binaries/data/mods/public/README.md b/binaries/data/mods/public/README.md
index 24a3bbbf9b..50eda02746 100644
--- a/binaries/data/mods/public/README.md
+++ b/binaries/data/mods/public/README.md
@@ -52,6 +52,7 @@ The phase requirements are as follows:
 - Every faction gets a Government Center (an Assembly or Palace, available in either the City Phase or Hegemon Phase, respectively). Government Centers train heroes and allow you to choose different styles of government (i.e. Democracy vs. Tyranny) and implement policies such as taxation.
 - Every faction gets to build a temple to a patron deity upon reaching the City or Hegemon Phase. A Patron Temple provides certain bonuses based on the nature of the patron deity (i.e. fertility bonuses for a Temple of Demeter, military bonuses for a Temple of Athena Nike). Each player can only build one Patron Temple.
 - Fields only allow three workers by default, but this number increases to five with a Farmhouse nearby, and seven if the farmhouse is upgraded to a Granary. Unlike Empires Ascendant, field workers _increase_ their productivity for every additional worker tasked to the same field, instead of experiencing diminishing returns.
+- Metal and Stone mines have had their maximum workers reduced to 10 for large mines and 5 for small mines. This is intended to incentivize building multiple civil centres to increase your resource gather rate.
 - Most factions get a "cash crop" resource field (i.e. vineyards, olive groves) from which they can gather a small amount of wealth.
 	- Britons and Gauls can garrison sheep in corrals to gain a small trickle of wealth (represents harvesting wool).
 - Mercenaries require a payment (upkeep) of 5 wealth every 20 seconds. If they are not paid, they rebel (switch loyalty to Gaia). To accommodate for the Carthaginians' heavy reliance on mercenaries, I have given the Carthaginian market a small wealth trickle.
diff --git a/binaries/data/mods/public/TODO.md b/binaries/data/mods/public/TODO.md
index ca34f6f4c4..0e770a4ea8 100644
--- a/binaries/data/mods/public/TODO.md
+++ b/binaries/data/mods/public/TODO.md
@@ -2,13 +2,6 @@
 Please feel free to contribute if you see anything you can do here. If there is anything you would like to see added to this list, please create an issue.
 
 ## First priorities
-- Balance city growth rate
-	- Implement City population drainage as part of growth rate /
-	- Add house limit, tied to number of civ centres /
-- Remove redundant additions of special buildings to civ-specific Production Queues /
-- Ensure city growth rate is readily apparent in gui /
-- Rewrite City.js to use event listeneres to register new/destroyed city members /
-- Rewrite Market.js to trigger event listeners when trade takes place; use listeners in City.js /
 - Improve Delphi bot
 	- Make sure delphi bot randomizes trade routes assignments, weighted by trader gain
 	- Allow building all available civic buildings via generic buildCivicBuilding function, replacing buildForge, buildTemple, etc.
@@ -16,33 +9,11 @@ Please feel free to contribute if you see anything you can do here. If there is
 	- Make sure it can train merchant ships /
 - Implement archer skill growth; archers should start off weaker than other ranged units when first trained, then become stronger through experience
 	- Create advanced, elite archer mixins
-- Modify GarrisonHolder component to enable value modifications based on number, type of units garrisoned /
-- Remove building ai from siege tower, ensure only usable for taking walls/other structures /
-	- Modify Attack component to allow garrisoned units to increase attack, allowing garrisoned infantry to increase siege tower capture attack /
-- Create library/academy monument for Athenians /
-- Create new palace actors for Hellenistic civs, kushites /
-- Rename Carthaginian embassies to Mercenary Camps /
-	- Allow to build one per town centre /
 - Create gold, silver resource supplies
-	- icons as well /
-- Create milk resource icon /
-- Resolve infinite queue entity limit exploit (try infinite queueing animals) /
 - Make sure all civ centre actors have projectiles
-- Implement value modifiers for City, scaling by population (see GarrisonHolder for example)/ 
-- Implement DeficitTriggers, DeficitValueModifiers for Upkeep (see GarrisonHolder for example) /
-	- Should replace/augment HandleInsufficientUpkeep /
 - Implement directional resistance, allowing weaker flank and rear armor
 - Rename "Population Limit" to "Command Limit", change icon
-- Rebalance city manpower trickle /
-- Create skirmish replacers for different levels of civ centre /
-- Create separate "govcentre" template, from which two templates inherit – palace and assembly /
-	- palace available in Hegemon phase /
-	- assembly available in City phase /
-	- civs with assembly get patron temples in hegemon phase /
 - Ensure phase upgrade notifications are displayed correctly
-- Document changes in CHANGELOG.md
-- Document unique features in README.md or FEATURES.md
-- Document development scripts in CONTRIBUTING.md
 
 ## Secondary priorities
 - Create Maurya monument(s)
@@ -89,18 +60,18 @@ Please feel free to contribute if you see anything you can do here. If there is
 
 ## Classification of soldier strengths/weaknesses
 - Infantry
-	- Spearmen: cheap, quick to train; weak on their own, fairly strong in phalanx formation with heavy armor, available to certain civs. Strong vs. light cav, weak vs. swordsmen, light infantry
+	- Spearmen: cheap, quick to train; weak on their own, but fairly strong in phalanx formation, especially with heavy armor technologies, available to certain civs. Strong vs. light cav, weak vs. swordsmen, light infantry
 	- Pikemen: tank units, nearly invulnerable to pierce damage. especially strong in phalanx. However, slow-moving and vulnerable to outmaneuvering/flanking. Strong vs. cav, light infantry, weak vs. swordsmen
 	- Swordsmen: most maneuverable melee infantry; relatively fast-moving. However, wear relatively light armor. Strong vs spearmen, pikemen, weak vs. ranged infantry, cavalry
 	- Javelineer: cheap, quick to train. Maneuverable, fastest infantry unit. Starts off with strong attack straight out of training. Strong vs swordsmen, spearmen, weak vs pikemen, cavalry
 	- Slinger: Medium train time and cost, deadly force to light infantry and cavalry over short distance. Moderate attack out of training, moderate skill acquisition through experience. Strong vs spearmen, swordsmen, javelineer, ranged cav, Weak vs. Pikemen, melee cav
 	- Archer: Long train time and cost, eventually grows to be deadly at a long range. Weak attack and accuracy out of training, but will eventually become extremely strong through experience. Strong vs all light units, weak vs. pikemen, heavy cavalry
 - Cavalry
-	- Spear: strongest cavalry unit in formation; has strong charge attack that can mow down disorganized and light infantry. Strong vs swordsmen, ranged infantry, weak vs pikemen, massed spearmen
-	- Sword: maneuverable, good raiders, possible counter to disorganized heavy cavalry. Strong vs light infantry, spear cavalry, ranged cavalry, weak vs spearmen, pikemen
-	- Javelin: maneuverable, good raiders. Strong vs disorganized infantry, weak vs spearmen, pikemen, swordsmen, sword cavalry
+	- Spear: strongest cavalry unit in formation; has strong charge attack that can mow down light infantry and out-of-formation infantry. Strong vs swordsmen, ranged infantry, weak vs pikemen, massed spearmen
+	- Sword: maneuverable, good raiders, possible counter to out-of-formation heavy cavalry. Strong vs light infantry, spear cavalry, ranged cavalry, weak vs spearmen, pikemen
+	- Javelin: maneuverable, good raiders. Strong vs out-of-formation infantry, weak vs spearmen, pikemen, swordsmen, sword cavalry
 	- Archer: Like foot archers, start off weak and become very strong through experience. Strong vs. All non-pike infantry at peak experience, weak-ish vs sword cavalry
-- Implement GUIInterface for popup dialogs to be called from Trigger scripts
+- Implement GUIInterface for popup choices that can be called from Trigger scripts
 
 ## New Civs
 ### Near East
diff --git a/binaries/data/mods/public/simulation/templates/template_structure_civic_civil_centre.xml b/binaries/data/mods/public/simulation/templates/template_structure_civic_civil_centre.xml
index 8e53041deb..939420cf77 100644
--- a/binaries/data/mods/public/simulation/templates/template_structure_civic_civil_centre.xml
+++ b/binaries/data/mods/public/simulation/templates/template_structure_civic_civil_centre.xml
@@ -74,6 +74,7 @@
     <Radius>90</Radius>
 		<ValueModifiers>
 			<PopulationDecay>
+				<!-- Increase the population decay rate per every 250 citizens, to make it increasingly more difficult to grow the population. -->
 				<Paths datatype="tokens">City/Population/Growth/DecayAmount</Paths>
 				<Add>2</Add>
 				<PerPop>250</PerPop>
-- 
2.25.1

